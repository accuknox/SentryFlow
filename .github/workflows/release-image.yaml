# SPDX-License-Identifier: Apache-2.0
# Copyright 2023 Authors of Nimbus

name: Release image

permissions: read-all

on:
  workflow_call:
    inputs:
      WORKING_DIRECTORY:
        description: 'current working directory'
        required: true
        type: string
      NAME:
        description: 'app name'
        required: true
        type: string
      ECR_REPOSITORY:
        description: 'ECR repository URL'
        required: false
        type: string
        default: 'public.ecr.aws/k9v9d5v2'
      REGISTRY_TYPE:
        description: 'ECR registry type (public or private)'
        required: false
        type: string
        default: 'public'

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_DEV_ACCESS_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_DEV_SECRET_ID }} 
  AWS_REGION: us-east-1

jobs:
  release-image:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Set up AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_DEV_ACCESS_ID }}
          aws-secret-access-key: ${{ secrets.AWS_DEV_SECRET_ID }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Get tag
        id: tag
        run: |
          if [ ${{ github.ref }} == "refs/heads/main" ]; then
            echo "tag=latest" >> $GITHUB_OUTPUT
          else
            echo "tag=${GITHUB_REF#refs/*/}" >> $GITHUB_OUTPUT
          fi

      - name: Docker build, scan and push to ECR
        uses: accuknox/common-gh-actions/actions/docker-build-scan-push@main
        with:
          docker_context: ${{ inputs.WORKING_DIRECTORY }}
          dockerfile_path: ${{ inputs.WORKING_DIRECTORY }}/Dockerfile
          image_name: ${{ inputs.NAME }}
          repository_name: ${{ inputs.ECR_REPOSITORY }}
          tag: ${{ steps.tag.outputs.tag }}
          registry_type: ${{ inputs.REGISTRY_TYPE }}
          disable_scan: true
          severity: "CRITICAL"
          exit_code: "0"
          ignore_unfixed: true
